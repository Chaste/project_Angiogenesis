= Angiogenesis Project =

The Angiogenesis project is a Chaste add-on with functionality for modelling blood vessels. It is written in C++ and Python.

= Installation =
The project can be used directly as a C++ library or else as a Python package.
First, Chaste dependencies need to be built from source following the [wiki:InstallGuides/InstallGuide Chaste Install Guide]. 
The project only supports the development version of Chaste, the source can be obtained following instructions [wiki:ChasteGuides/AccessCodeRepository here].

The C++ libraries can be built using either the standard Chaste Scons build system, see [wiki:ChasteGuides/DeveloperBuildGuide Chaste Developer Build Guide] and 
[wiki:InstallGuides/CheckoutUserProject Chaste User Project Build Guide] or the [wiki:ChasteGuides/CmakeBuildGuide new CMake build system]. For the latter, the steps [wiki:InstallGuides/CheckoutUserProject here] up to the point of building still need to be followed. The command
to build the C++ interface with CMake is:

{{{
make project_Angiogenesis
}}}

The Python package can only be built using the CMake build system. Building requires Boost Python, which may already be installed on your system. If not, this can be done by adding `python` to the list of libraries to be built when following the Boost build instructions [wiki:InstallGuides/InstallGuide here]. First build
the C++ libraries, as above. Then do:

{{{
make project_Angiogenesis_Python
}}}

The Python package `chaste` will be in the build directory under `Chaste/projects/Angiogenesis/python` and can be imported in the typical way. For convenience, the build directory `Chaste/projects/Angiogenesis/python` should be added to your PYTHONPATH and
the Chaste library directories to LD_LIBRARY_PATH.

== Usage ==
For the C++ framework source and test code are in the `src` and `test` folders respectively. The Python source and tests are in the `src/python` and `test/python` folders.

Unit tests can be built and run using the Chaste CMake framework [wiki:ChasteGuides/CmakeBuildGuide as detailed here]. It is recommended that the tutorials for 
either the [wiki:PaperTutorials/Angiogenesis/BuildVesselNetwork C++] or [wiki:PaperTutorials/Angiogenesis/PythonBuildVesselNetwork Python] frameworks are followed next.

A full list of tutorials is given at the bottom of this page.