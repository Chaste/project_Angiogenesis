= Angiogenesis Project =

The Angiogenesis project is a Chaste add-on with functionality for modelling blood vessels. It is written in C++ and Python.

= Installation =
The project can be used directly as a C++ library or else as a Python package, following the generation of bindings. 

First, Chaste dependencies need to be built from source following the [wiki:InstallGuides/InstallGuide Chaste Install Guide]. 

The project only supports the development version of Chaste, the source can be obtained following instructions [wiki:ChasteGuides/AccessCodeRepository here].

The project uses the new CMake build system for Chaste, details are [wiki:ChasteGuides/CmakeBuildGuide here]. Prior to starting the build 
two small changes are needed to the file `CMakeLists.txt` in the Chaste source directory to allow for Python binding generation.

Find the line:
{{{
find_package(Boost COMPONENTS filesystem system serialization REQUIRED)
}}}

and change it to:

{{{
find_package(Boost COMPONENTS filesystem system serialization python REQUIRED)
}}}.

Add the following on the next line:

{{{
list(APPEND Chaste_LINK_LIBRARIES "path-to-lib/libpython2.x.so").
}}}

where `path-to-lib/libpython2.x.so` is the path to your Python library (often it is something like `/usr/lib/libpython2.x.so`).

Check out the source code for the project `Angiogenesis` following [wiki:InstallGuides/CheckoutUserProject this guide], including the instructions for creating a
symbolic link to the Chaste source folder. Now, follow the instructions for building with CMake [wiki:ChasteGuides/CmakeBuildGuide here]. Once configured, the 
Angiogenesis library, all unit tests and the build targets for the Python bindings can be built by doing:

{{{
make project_Angiogenesis
}}}

If you are only interested in using the C++ version you can now move to the next Section on Usage.

The Python package `chaste` is located in `Chaste/projects/Angiogenesis/src/python`. To use most of the functionality it is neccessary to build bindings for the C++ code
and move the resulting Python modules to the correct locations in the package. To do so go to the Chaste source directory and do:

{{{
./projects/Angiogenesis/update_modules.sh
}}}

The Python package `chaste` can now be used in the typical way. For convenience, the directory `Chaste/projects/Angiogenesis/src/python` should be added to your PYTHONPATH and
the Chaste library directories to LD_LIBRARY_PATH.

== Usage ==
For the C++ framework source and test code are in the `src` and `test` folders respectively. The Python source and tests are in the `src/python` and `test/python` folders.

Unit tests can be built and run using the Chaste CMake framework [wiki:ChasteGuides/CmakeBuildGuide as detailed here]. It is recommended that the tutorials for 
either the [wiki:PaperTutorials/Angiogenesis/BuildVesselNetwork C++] or [wiki:PaperTutorials/Angiogenesis/PythonBuildVesselNetwork Python] frameworks are followed next.

A full list of tutorials is given at the bottom of this page.